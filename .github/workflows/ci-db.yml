name: CI Django + DB + Docker + Railway Auto-Deploy

on:
  push:
    branches: ["Deployment"]

jobs:
  # Job 1: Run tests with MySQL
  test:
    runs-on: ubuntu-latest

    # Setting up MySQL service container
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Ankith@5space
          MYSQL_DATABASE: django
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env: 
      GITHUB_WORKFLOW: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          sudo apt-get install -y default-mysql-client
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect static files
        run: python manage.py collectstatic --noinput

      - name: Run tests
        run: python manage.py test myapp.tests

  # Job 2: Build and push Docker image (only if tests pass)
  build_and_push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ankith1307/myprojct:${{ github.sha }}
            ankith1307/myprojct:latest
          cache-from: type=registry,ref=ankith1307/myprojct:latest
          cache-to: type=inline

      - name: Image push success
        run: |
          echo "‚úÖ Docker image built and pushed successfully!"
          echo "üì¶ Image: ankith1307/myprojct:latest"
          echo "üè∑Ô∏è  Tag: ankith1307/myprojct:${{ github.sha }}"

  # Job 3: Deploy to Railway (only if build succeeds)
  deploy_to_railway:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Wait for Docker Hub to process image
        run: |
          echo "‚è≥ Waiting 100 seconds for Docker Hub to process the image..."
          sleep 100

      - name: Trigger Railway deployment via API
        run: |
          echo "üöÄ Triggering Railway deployment..."
          
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST https://backboard.railway.app/graphql \
            -H "Authorization: Bearer ${{ secrets.RAILWAY_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "query": "mutation serviceInstanceRedeploy($environmentId: String!, $serviceId: String!) { serviceInstanceRedeploy(environmentId: $environmentId, serviceId: $serviceId) }",
              "variables": {
                "environmentId": "${{ secrets.RAILWAY_ENVIRONMENT_ID }}",
                "serviceId": "${{ secrets.RAILWAY_SERVICE_ID }}"
              }
            }')
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')
          
          echo "Response: $BODY"
          echo "HTTP Code: $HTTP_CODE"
          
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "‚úÖ Railway deployment triggered successfully!"
          else
            echo "‚ö†Ô∏è Railway API returned HTTP $HTTP_CODE"
            echo "Response body: $BODY"
            exit 1
          fi

      - name: Deployment summary
        run: |
          echo "======================================"
          echo "üéâ Deployment Process Complete!"
          echo "======================================"
          echo ""
          echo "üì¶ Docker Image: ankith1307/myprojct:latest"
          echo "üè∑Ô∏è  Commit SHA: ${{ github.sha }}"
          echo "üë§ Deployed by: ${{ github.actor }}"
          echo "üåø Branch: ${{ github.ref_name }}"
          echo "üöÄ Railway is now deploying your app"
          echo ""
          echo "üìä Monitor deployment at: https://hearty-mindfulness-production-46f0.up.railway.app/"
          echo "======================================"